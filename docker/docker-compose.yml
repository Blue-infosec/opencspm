version: '3'

x-app: &app
  build:
    context: .dockerdev
    dockerfile: Dockerfile
    args:
      RUBY_VERSION: '2.6.6'
      PG_MAJOR: '13'
      NODE_MAJOR: '12'
      YARN_VERSION: '1.22.5'
      BUNDLER_VERSION: '2.0.2'
  environment: &env
    NODE_ENV: ${NODE_ENV:-development}
    RAILS_ENV: ${RAILS_ENV:-development}
  image: opencspm-dev:0.1.0
  tmpfs:
    - /tmp

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/app:cached
    - rails_cache:/app/tmp/cache
    - bundle:/usr/local/bundle
    - node_modules:/app/node_modules
    - packs:/app/public/packs
    - .dockerdev/.psqlrc:/root/.psqlrc:ro
    - .dockerdev/.bashrc:/root/.bashrc:ro
  environment:
    <<: *env
    REDIS_URL: redis://redis:6379/
    DATABASE_URL: postgres://postgres:postgres@db:5432
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    WEB_CONCURRENCY: ${WEB_CONCURRENCY:-1}
    HISTFILE: /app/log/.bash_history
    PSQL_HISTFILE: /app/log/.psql_history
    EDITOR: vi
  depends_on:
    db:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  core:
    <<: *backend
    command: bundle exec rails server -p 5000
    ports:
      - '5000:5000'

  jobs:
    <<: *backend
    environment:
      MALLOC_ARENA_MAX: 2
    command: bundle exec sidekiq -C config/sidekiq.yml
    depends_on:
      redis:
        condition: service_healthy

  db:
    image: postgres:13.0
    volumes:
      - .dockerdev/.psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: docker.io/redislabs/redisgraph:edge
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

volumes:
  postgres:
  redis:
  bundle:
  node_modules:
  rails_cache:
  packs:
